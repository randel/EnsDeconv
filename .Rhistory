if (!require("devtools")) {
install.packages("devtools")
}
devtools::install_github("meichendong/SCDC")
library(devtools)
BiocManager::install("Biobase")
BiocManager::install("Biobase")
install.packages("BiocManager")
BiocManager::install("Biobase")
install.packages("remotes")
remotes::install_github("renozao/xbioc")
install.packages("remotes")
if (!require("devtools")) {
install.packages("devtools")
}
devtools::install_github("meichendong/SCDC")
remotes::install_github("renozao/xbioc")
if (!require("devtools")) {
install.packages("devtools")
}
devtools::install_github("meichendong/SCDC")
library(SCDC)
install.packages("reticulate")
library(reticulate)
use_python("/usr/local/bin/python")
py_install("pyomo")
Y
packages <- c("devtools", "BiocManager","data.table","ggplot2","tidyverse",
"Matrix","matrixStats",
"gtools",
"foreach","doMC","doSNOW", #for parallelism
"Seurat","sctransform", #sc-specific normalization
"nnls","FARDEEP","MASS","glmnet","ComICS","dtangle") #bulk deconvolution methods
for (i in packages){ install.packages(i, character.only = TRUE)}
install.packages(i, character.only = TRUE)
packages3 = c('limma','edgeR','DESeq2','pcaMethods','BiocParallel','preprocessCore','scater','SingleCellExperiment','Linnorm','DeconRNASeq','multtest','GSEABase','annotate','genefilter','preprocessCore','graph','MAST','Biobase') #last two are required by DWLS and MuSiC, respectively.
for (i in packages3){ BiocManager::install(i, character.only = TRUE)}
install.packages("BiocInstaller", repos="http://bioconductor.org/packages/3.7/bioc/")
system('wget http://web.cbio.uct.ac.za/~renaud/CRAN/src/contrib/CellMix_1.6.2.tar.gz')
system("R CMD INSTALL CellMix_1.6.2.tar.gz")
system('wget https://github.com/zhandong/DSA/raw/master/Package/version_1.0/DSA_1.0.tar.gz')
system("R CMD INSTALL DSA_1.0.tar.gz")
# Following packages come from Github
devtools::install_github("GfellerLab/EPIC", build_vignettes=TRUE) #requires knitr
devtools::install_github("xuranw/MuSiC")
library(parallel)
detectCores()
load("D:/R01deconv/data/CMC_RNA_bulk_trueFrac_FACScts_n32.rdata")
View(frac32)
setwd("D:/ensemble deconvolution)
)
""
)
++
?.d;wkpjwpojk
load("D:\dbgap\fhs\fhs_expr_pheno.rdata")
load("D:/dbgap/fhs/fhs_expr_pheno.rdata")
View(frac)
View(gene)
View(meta)
View(pheno)
View(frac)
View(meta)
View(frac)
View(expr)
.libPaths(c("C:/Users/mac538/Documents/R/win-library/4.1", "C:/Program Files/R/R-4.1.1/library","F:/E-drive/Manqi/win-library/4.0" ))
.libPaths(c("C:/Users/mac538/Documents/R/win-library/4.1", "C:/Program Files/R/R-4.1.1/library","F:/E-drive/Manqi/win-library/4.0" ))
.libPaths(c("E:/Manqi/win-library/4.0", "C:/Program Files/R/R-4.0.4/library"))
load("D:/Jiebiao/EVAPR/EVAPR.WBC.Rdata")
# load("D:/ensemble deconvolution/data/wbc/Novershtern_2011_GSE24759.rdata")
load('D:/Jiebiao/EVAPR/wbc_lm22_benchmark.rdata')
# load("D:/ensemble deconvolution/data/wbc/Novershtern_2011_GSE24759.rdata")
# load("D:/ensemble deconvolution/data/wbc/hca_wbc.rdata")
library(deconv.ensemble)
load("C:/D-drive/Jiebiao/EVAPR/EVAPR.WBC.Rdata")
load("C:/D-drive/Jiebiao/EVAPR/wbc_lm22_benchmark.rdata")
load("C:/D-drive/ensemble deconvolution/data/PBMC/wbc_ref.RData")
frac_sub =frac[which(rowSums(frac)>0.7),]
pheno_sub = pheno %>% filter(StudyID %in% rownames(frac_sub))
nonna.gene.exp_sub = nonna.gene.exp[,rownames(frac_sub)]
library(dplyr)
frac_sub =frac[which(rowSums(frac)>0.7),]
pheno_sub = pheno %>% filter(StudyID %in% rownames(frac_sub))
nonna.gene.exp_sub = nonna.gene.exp[,rownames(frac_sub)]
knitr::opts_chunk$set(echo = TRUE)
ref_list[["HPCAOrthogonal_sub"]] = NULL
ref_list[["lm22_sig"]] = NULL
norm_params <-  get_params(data_name=names(ref_list),data_type = "microarray",Marker.Method = "COSG",CNormalization = "none",teqc = T)
norm_params = norm_params %>% mutate(Marker.Method = ifelse(data_name == "ImmunoStates","none",Marker.Method)) %>% unique()
dmeths_ori <- c("dtangle", "hspe")
new_norm = norm_params[rep(1:nrow(norm_params),2),]
new_norm$dmeths = rep(dmeths_ori,each = nrow(norm_params))
View(new_norm)
new_norm =  new_norm%>% filter(!(Scale == "log" & dmeths %in% c("BisqueRNA","MuSiC","logRegression","linearRegression"))) %>%
filter(!dmeths %in% c("BisqueRNA","MuSiC")) %>%
filter(!(Scale == "linear" & dmeths %in% c("dtangle","hspe","GEDIT"))) %>%
filter(!(Scale == "log" & dmeths %in% c("ICeDT","DSA","BayesPrism","EPIC"))) %>%
filter(!(Marker.Method %in% c("TOAST","none") & dmeths %in% c("deconf","ssFrobenius","ssKL","DSA","Q Prog","LS Fit")))
setwd("D:/")
load("F:/D-drive/dbgap/fhs/fhs_expr_pheno.rdata")
res_fhs = gen_all_res_list(count_bulk = 2^expr-1,ref_list = ref_list, ncv_input =1,outpath ="D:/Manqi/fhs/8_23_hspedt_COSG/" ,ncore = 6,parallel_comp = T,markers_range = NULL,params = new_norm,true_frac = NULL,clustering = F)
new_norm
gen_all_res_list
setwd("D:/Manqi/deconv.ensemble")
devtools::install()
.libPaths(c("C:/Users/mac538/Documents/R/win-library/4.1", "C:/Program Files/R/R-4.1.1/library","F:/E-drive/Manqi/win-library/4.0" ))
.libPaths()
library(deconv.ensemble)
gen_all_res_list
new_norm = new_norm %>% filter(Marker.Method == "COSG")
res_fhs = gen_all_res_list(count_bulk = 2^expr-1,ref_list = ref_list, ncv_input =1,outpath ="D:/Manqi/fhs/8_23_hspedt_COSG/" ,ncore = 4,parallel_comp = T,markers_range = NULL,params = new_norm,true_frac = NULL,clustering = F)
View(res_fhs)
