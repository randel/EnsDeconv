if (!require("devtools")) {
install.packages("devtools")
}
devtools::install_github("meichendong/SCDC")
library(devtools)
BiocManager::install("Biobase")
BiocManager::install("Biobase")
install.packages("BiocManager")
BiocManager::install("Biobase")
install.packages("remotes")
remotes::install_github("renozao/xbioc")
install.packages("remotes")
if (!require("devtools")) {
install.packages("devtools")
}
devtools::install_github("meichendong/SCDC")
remotes::install_github("renozao/xbioc")
if (!require("devtools")) {
install.packages("devtools")
}
devtools::install_github("meichendong/SCDC")
library(SCDC)
install.packages("reticulate")
library(reticulate)
use_python("/usr/local/bin/python")
py_install("pyomo")
Y
packages <- c("devtools", "BiocManager","data.table","ggplot2","tidyverse",
"Matrix","matrixStats",
"gtools",
"foreach","doMC","doSNOW", #for parallelism
"Seurat","sctransform", #sc-specific normalization
"nnls","FARDEEP","MASS","glmnet","ComICS","dtangle") #bulk deconvolution methods
for (i in packages){ install.packages(i, character.only = TRUE)}
install.packages(i, character.only = TRUE)
packages3 = c('limma','edgeR','DESeq2','pcaMethods','BiocParallel','preprocessCore','scater','SingleCellExperiment','Linnorm','DeconRNASeq','multtest','GSEABase','annotate','genefilter','preprocessCore','graph','MAST','Biobase') #last two are required by DWLS and MuSiC, respectively.
for (i in packages3){ BiocManager::install(i, character.only = TRUE)}
install.packages("BiocInstaller", repos="http://bioconductor.org/packages/3.7/bioc/")
system('wget http://web.cbio.uct.ac.za/~renaud/CRAN/src/contrib/CellMix_1.6.2.tar.gz')
system("R CMD INSTALL CellMix_1.6.2.tar.gz")
system('wget https://github.com/zhandong/DSA/raw/master/Package/version_1.0/DSA_1.0.tar.gz')
system("R CMD INSTALL DSA_1.0.tar.gz")
# Following packages come from Github
devtools::install_github("GfellerLab/EPIC", build_vignettes=TRUE) #requires knitr
devtools::install_github("xuranw/MuSiC")
library(parallel)
detectCores()
load("D:/R01deconv/data/CMC_RNA_bulk_trueFrac_FACScts_n32.rdata")
View(frac32)
setwd("D:/ensemble deconvolution)
)
""
)
++
?.d;wkpjwpojk
load("D:\dbgap\fhs\fhs_expr_pheno.rdata")
load("D:/dbgap/fhs/fhs_expr_pheno.rdata")
View(frac)
View(gene)
View(meta)
View(pheno)
View(frac)
View(meta)
View(frac)
View(expr)
.libPaths(c("C:/Users/mac538/Documents/R/win-library/4.1", "C:/Program Files/R/R-4.1.1/library","F:/E-drive/Manqi/win-library/4.0" ))
.libPaths(c("C:/Users/mac538/Documents/R/win-library/4.1", "C:/Program Files/R/R-4.1.1/library","F:/E-drive/Manqi/win-library/4.0" ))
load("D:/ensemble deconvolution/data/stab_data/stab_all.RData")
load("D:/ensemble deconvolution/data/ROS/ros_frac_count_meta_ihc49.RData")
load("D:/ensemble deconvolution/data/ROS/ROS_bulk.RData")
load("D:/ensemble deconvolution/data/ASD/asd_data3.rdata")
load("D:/ensemble deconvolution/data/Mathys/sn_Mathys_count_meta.RData")
load("D:/ensemble deconvolution/data/mrk_gene/metamarker_list.RData")
ROS_true <- readRDS("D:/ensemble deconvolution/data/true/ROS_true.RDS")
setwd("D:/")
load("F:/D-drive/ensemble deconvolution/data/stab_data/stab_all.RData")
load("F:/D-drive/ensemble deconvolution/data/ROS/ros_frac_count_meta_ihc49.RData")
load("F:/D-drive/ensemble deconvolution/data/ROS/ROS_bulk.RData")
load("F:/D-drive/ensemble deconvolution/data/ASD/asd_data3.rdata")
load("F:/D-drive/ensemble deconvolution/data/Mathys/sn_Mathys_count_meta.RData")
load("F:/D-drive/ensemble deconvolution/data/mrk_gene/metamarker_list.RData")
ROS_true <- readRDS("F:/D-drive/ensemble deconvolution/data/true/ROS_true.RDS")
library(deconv.ensemble)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(ggpubr)
library(gridExtra)
library(grid)
library(doParallel)
library(doSNOW)
library(foreach)
library(parallel)
library(nnls)
library(Rsolnp)
library(ggridges)
params = get_params(data_name = names(stab_list),data_type = "singlecell-rna",Marker.Method = c("t","wilcox","combined","COSG","TOAST"))
params = params %>% mutate(CNormalization = ifelse(data_name %in% c("Welch","Li_a") &(CNormalization == "TPM"),"CPM",CNormalization)) %>% unique() %>% filter(Marker.Method!="TOAST")
dmeths_ori <- c("dtangle", "hspe","deconf","ssFrobenius","ssKL","DSA","Q Prog","LS Fit","CIBERSORT","logRegression","linearRegression","EPIC","TOASTP","MuSiC","BisqueRNA","GEDIT", "ICeDT","DeconRNASeq", "BayesPrism","FARDEEP","DCQ")
new_norm = params[rep(1:nrow(params),21),]
new_norm$dmeths = rep(dmeths_ori,each = nrow(params))
new_norm =  new_norm%>% filter(!(Scale == "log" & dmeths %in% c("BisqueRNA","MuSiC","logRegression","linearRegression"))) %>%
filter(!(Scale == "linear" & dmeths %in% c("dtangle","hspe","GEDIT"))) %>%
filter(!(Scale == "log" & dmeths %in% c("ICeDT","DSA","BayesPrism","EPIC"))) %>%
filter(!(Marker.Method %in% c("TOAST","none") & dmeths %in% c("deconf","ssFrobenius","ssKL","DSA","Q Prog","LS Fit"))) %>%
mutate(Marker.Method = ifelse(dmeths %in% c("BisqueRNA","MuSiC"),"none",Marker.Method)) %>% unique()
library(glmnet)
library(reticulate)
check_norm = new_norm %>% filter(dmeths == "GEDIT")
check = gen_all_res_list(count_bulk = as.matrix(bulk_count_ros49),meta_bulk = meta_bulk_ros49,ref_list = stab_list, true_frac = ROS_true,ncv_input= 1,outpath ="D:/Manqi/results/ROS/8_23/check/" ,ncore = 2,parallel_comp = F,params = check_norm[1:2,],mrkpen = F,rm.duplicated = F)
library(sparseMatrixStats)
check_norm = new_norm %>% filter(dmeths == "GEDIT")
check = gen_all_res_list(count_bulk = as.matrix(bulk_count_ros49),meta_bulk = meta_bulk_ros49,ref_list = stab_list, true_frac = ROS_true,ncv_input= 1,outpath ="D:/Manqi/results/ROS/8_23/check/" ,ncore = 2,parallel_comp = F,params = check_norm[1:2,],mrkpen = F,rm.duplicated = F)
View(check)
View(check)
res_gedit = gen_all_res_list(count_bulk = as.matrix(bulk_count_ros49),meta_bulk = meta_bulk_ros49,ref_list = stab_list, true_frac = ROS_true,ncv_input= 1,outpath ="D:/Manqi/results/ROS/8_23/GEDIT/" ,ncore = 2,parallel_comp = F,params = check_norm,mrkpen = F,rm.duplicated = F)
library(edgeR)
setwd("D:/Manqi/deconv.ensemble/R")
devtools::install()
library(deconv.ensemble)
res_gedit = gen_all_res_list(count_bulk = as.matrix(bulk_count_ros49),meta_bulk = meta_bulk_ros49,ref_list = stab_list, true_frac = ROS_true,ncv_input= 1,outpath ="D:/Manqi/results/ROS/8_23/GEDIT/" ,ncore = 2,parallel_comp = F,params = check_norm,mrkpen = F,rm.duplicated = F)
devtools::install()
library(deconv.ensemble)
res_gedit = gen_all_res_list(count_bulk = as.matrix(bulk_count_ros49),meta_bulk = meta_bulk_ros49,ref_list = stab_list, true_frac = ROS_true,ncv_input= 1,outpath ="D:/Manqi/results/ROS/8_23/GEDIT/" ,ncore = 2,parallel_comp = F,params = check_norm,mrkpen = F,rm.duplicated = F)
View(check_norm)
library(scran)
check_norm$Marker.Method
res_gedit2 = gen_all_res_list(count_bulk = as.matrix(bulk_count_ros49),meta_bulk = meta_bulk_ros49,ref_list = stab_list, true_frac = ROS_true,ncv_input= 1,outpath ="D:/Manqi/results/ROS/8_23/GEDIT/" ,ncore = 2,parallel_comp = F,params = check_norm[105:208,],mrkpen = F,rm.duplicated = F)
View(res_gedit2)
